/*! ngs3upload 06-07-2016 */
!function(a,b){angular.module("ngS3upload.config",[]).value("ngS3upload.config",{debug:!0}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngS3upload.directives",[]),angular.module("ngS3upload",["ngS3upload.config","ngS3upload.directives","ngS3upload.services","ngSanitize"]),angular.module("ngS3upload.services",[]).service("S3Uploader",["$http","$q","$window",function(a,b,c){this.uploads=0;var d=this;this.getUploadOptions=function(c){var d=b.defer();return a.get(c).success(function(a,b){d.resolve(a)}).error(function(a,b){d.reject(a)}),d.promise},this.randomString=function(a){for(var b="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c="",d=a;d>0;--d)c+=b[Math.round(Math.random()*(b.length-1))];return c},this.upload=function(a,c,e,f,g,h,i,j,k){function l(b){a.$apply(function(){b.lengthComputable?a.progress=Math.round(100*b.loaded/b.total):a.progress="unable to compute";var c={type:"progress",value:a.progress};a.$emit("s3upload:progress",c),"function"==typeof p.notify&&p.notify(c)})}function m(b){var f=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,204===f.status?(a.success=!0,p.resolve(f),a.$emit("s3upload:success",f,{path:c+e})):(a.success=!1,p.reject(f),a.$emit("s3upload:error",f))})}function n(b){var c=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!1,p.reject(c),a.$emit("s3upload:error",c)})}function o(b){var c=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!1,p.reject(c),a.$emit("s3upload:abort",c)})}var p=b.defer();a.attempt=!0;var q=new FormData;q.append("key",e),q.append("acl",f),q.append("Content-Type",g),q.append("AWSAccessKeyId",h),q.append("policy",i),q.append("signature",j),q.append("file",k);var r=new XMLHttpRequest;return r.upload.addEventListener("progress",l,!1),r.addEventListener("load",m,!1),r.addEventListener("error",n,!1),r.addEventListener("abort",o,!1),a.$emit("s3upload:start",r),a.uploading=!0,this.uploads++,r.open("POST",c,!0),r.send(q),p.promise},this.isUploading=function(){return this.uploads>0}}]),angular.module("ngS3upload.directives",[]).directive("s3Upload",["$parse","S3Uploader",function(a,b){return{restrict:"AC",require:"?ngModel",replace:!0,transclude:!1,scope:!0,controller:["$scope","$element","$attrs","$transclude",function(a,b,c,d){a.attempt=!1,a.success=!1,a.uploading=!1,a.barClass=function(){return{"bar-success":a.attempt&&!a.uploading&&a.success}}}],compile:function(a,c,d){return{pre:function(a,b,c){if(angular.isUndefined(c.bucket))throw Error("bucket is a mandatory attribute")},post:function(a,d,e,f){var g=angular.extend({},a.$eval(e.s3UploadOptions||e.options));g=angular.extend({submitOnChange:!0,getOptionsUri:"/getS3Options",acl:"public-read",uploadingKey:"uploading",folder:"",enableValidation:!0},g);var h=a.$eval(e.bucket);a.chooseFileLabel=e.chooseFileLabel||"Choose file",a.replaceFileLabel=e.replaceFileLabel||"Replace file",a.storedFileLabel=e.storedFileLabel||"Stored File",a.buttonClass=c.buttonClass||"btn btn-primary";var i=angular.element(d.children()[0]),j=angular.element(d.find("input")[0]);i.bind("click",function(a){j[0].click()}),f.$render=function(){a.filename=f.$viewValue};var k=function(){var c=j[0].files[0],d=c.name;d.split(".").pop();a.$apply(function(){b.getUploadOptions(g.getOptionsUri).then(function(d){g.enableValidation&&f.$setValidity("uploading",!1);var e="https://"+h+".s3.amazonaws.com/";b.upload(a,e,d.fileKey,d.acl,d.contentType,d.s3Key,d.s3PolicyBase64,d.s3Signature,c).then(function(){f.$setViewValue(d.fileUrl),a.filename=f.$viewValue,g.enableValidation&&(f.$setValidity("uploading",!0),f.$setValidity("succeeded",!0))},function(){a.filename=f.$viewValue,g.enableValidation&&(f.$setValidity("uploading",!0),f.$setValidity("succeeded",!1))})},function(a){throw Error("Can't receive the needed options for S3 "+a)})})};d.bind("change",function(a){g.submitOnChange&&k()})}}},template:'<div class="upload-wrap"><button class="{{ buttonClass }}" type="button"><span ng-if="!filename">{{ chooseFileLabel }}</span><span ng-if="filename">{{ replaceFileLabel }}</span></button><a ng-href="{{ filename  }}" target="_blank" class="" ng-if="filename" >{{ storedFileLabel }}</a><div class="progress progress-striped" ng-class="{active: uploading}" ng-show="attempt" style="margin-top: 10px"><div class="bar" style="width: {{ progress }}%;" ng-class="barClass()"></div></div><input type="file" style="display: none"/></div>'}}])}(window,document);